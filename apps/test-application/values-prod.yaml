# Production values for test-application
replicaCount: 3

image:
  repository: aryanpola/sample-application
  tag: "b2060e48"
  pullPolicy: IfNotPresent

imagePullSecrets:
  - name: ghcr-secret

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automountServiceAccountToken: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  name: ""

podSecurityContext:
  fsGroup: 2000
  runAsNonRoot: true
  runAsUser: 1000

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 3000
  annotations: {}

ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/rate-limit: "100"
  hosts:
    - host: test-app.spandaai.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: test-app-tls
      hosts:
        - test-app.spandaai.com

resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 200m
    memory: 256Mi

autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

# Health check configuration
healthCheck:
  enabled: true
  path: /health
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

# Readiness probe configuration
readinessProbe:
  enabled: true
  path: /health
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

# Environment variables
env:
  NODE_ENV: production
  LOG_LEVEL: info
  PORT: "3000"
  METRICS_ENABLED: "true"

# ConfigMap configuration
configMap:
  enabled: true
  data:
    database.url: "postgresql://prod-db:5432/testapp"
    redis.url: "redis://redis-service:6379"
    app.name: "test-application"

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - test-application
        topologyKey: kubernetes.io/hostname

# Volume mounts for writable directories
volumeMounts:
  - name: tmp
    mountPath: /tmp
  - name: var-cache
    mountPath: /var/cache

volumes:
  - name: tmp
    emptyDir: {}
  - name: var-cache
    emptyDir: {}
