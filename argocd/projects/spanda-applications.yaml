apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: spanda-applications
  namespace: argocd
  labels:
    app.kubernetes.io/name: spanda-applications
    app.kubernetes.io/managed-by: platform-team
spec:
  description: Project for Spanda Platform applications - supports client repositories (legacy)
  
  # Allow applications from client repositories
  sourceRepos:
  - '*'  # Clients can deploy from their own repositories
  
  # Support both tenant namespaces and legacy namespaces for backward compatibility
  destinations:
  - namespace: 'development'
    server: https://kubernetes.default.svc
  - namespace: 'staging'
    server: https://kubernetes.default.svc
  - namespace: 'production'
    server: https://kubernetes.default.svc
  # Legacy application namespaces
  - namespace: 'test-application*'
    server: https://kubernetes.default.svc
  # Tenant namespaces (for applications not yet using tenant-specific projects)
  - namespace: '*-dev'
    server: https://kubernetes.default.svc
  - namespace: '*-staging'
    server: https://kubernetes.default.svc
  - namespace: '*-prod'
    server: https://kubernetes.default.svc
  
  # Limited cluster-level resources for applications
  clusterResourceWhitelist:
  - group: ''
    kind: Namespace
  
  # Application-level resources (for client applications)
  namespaceResourceWhitelist:
  # Core application resources
  - group: ''
    kind: Service
  - group: ''
    kind: ConfigMap
  - group: ''
    kind: Secret
  - group: ''
    kind: ServiceAccount
  - group: ''
    kind: PersistentVolumeClaim
  
  # Workload resources
  - group: apps
    kind: Deployment
  - group: apps
    kind: ReplicaSet
  - group: apps
    kind: StatefulSet
  - group: apps
    kind: DaemonSet
  
  # Batch resources
  - group: batch
    kind: Job
  - group: batch
    kind: CronJob
  
  # Networking resources
  - group: networking.k8s.io
    kind: Ingress
  - group: networking.k8s.io
    kind: NetworkPolicy
  
  # Scaling resources
  - group: autoscaling
    kind: HorizontalPodAutoscaler
  
  # Monitoring resources (if using ServiceMonitor)
  - group: monitoring.coreos.com
    kind: ServiceMonitor
  - group: monitoring.coreos.com
    kind: PodMonitor
  
  # Role-based access (limited to namespace level)
  - group: rbac.authorization.k8s.io
    kind: Role
  - group: rbac.authorization.k8s.io
    kind: RoleBinding
